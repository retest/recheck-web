name: deploy

on:
  push:
    tags: v*

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - name: Set up JDK 8
      uses: actions/setup-java@v1
      with:
        java-version: 8
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    - name: Cache Maven
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository/
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: GPG Sign
      run: |
        if [ ! -f ${GITHUB_WORKSPACE}/already_signed ]; then
            # decrypt ReTest secret key
            openssl aes-256-cbc -K "${encrypted_5faff216b858_key}" -iv "${encrypted_5faff216b858_iv}" -in "${GITHUB_WORKSPACE}/retest-gmbh-gpg.asc.enc" -out "${TRAVIS_BUILD_DIR}/retest-gmbh-gpg.asc" -d
            # import decrypted ReTest secret key
            gpg --pinentry-mode loopback --passphrase "${GPG_PASSPHRASE}" --fast-import "${GITHUB_WORKSPACE}/retest-gmbh-gpg.asc"
            # package sign artifacts
            mvn ${MVN_ARGS} verify -DskipTests -Psign

            touch ${GITHUB_WORKSPACE}/already_signed
        fi

    - name: Publish package
      id: deploy
      run: |
        mvn --batch-mode deploy -DskipTests -Psign
        cd ./target/
        echo "::set-output name=zip_name::$(echo recheck-web-*-jar-with-dependencies.jar)"
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true

    - name: Upload release asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ./target/${{ steps.deploy.outputs.zip_name }}
        asset_name: ${{ steps.deploy.outputs.zip_name }}
        asset_content_type: application/zip
